#!/bin/sh  
#PBS -N obsproc_%JTYP%_prep_%PDY%_%CC%_%DESC%
#PBS -j oe
#PBS -q dev               
#PBS -l walltime=00:20:00 
#PBS -A OBSPROC-DEV
#PBS -l place=vscatter,select=1:ncpus=4:mem=180gb:prepost=true
#PBS -l debug=true

##############################################
# Submit notes:
# Run from [ps]tmp when running manually
# When running from cron, output is written to /u/$USER. Bottom of trigger mv's to stmp
# For specific PDY:
# > jtyp=gdas cyc=00 PDY=20170126 desc=somethingfun /u/iliana.genkova/bin/cycqsub /path/to/triggers/jglobal_prep.wc2.pbs
# For latest/current PDY:
# > jtyp=gdas cyc=00 desc=somethingfun /u/iliana.genkova/bin/cycqsub /path/to/triggers/jglobal_prep.wc2.pbs
# cycqsub location: /u/iliana.genkova/bin 
##############################################

set -xu

export envir=prod
export cyc=%CC%
DESC=%DESC%
JTYP=%JTYP%
export job=${JTYP}_prep_$cyc
export jobid=$job.$PBS_JOBID
export PDY=%PDY%

userROOT=/lfs/h2/emc/obsproc/noscrub/$USER

export obsNET=obsproc
export obsproc_ver=v1.1
export obsproc_ver_pckg=v1.1.0
export prepobs_ver=1.1.0
#PACKAGEROOTpara=/lfs/h1/ops/para/packages
PACKAGEROOT=/lfs/h2/emc/obsproc/noscrub/nicholas.esposito/TAC2/

#export HOMEobsproc=${PACKAGEROOTpara}/obsproc.${obsproc_ver_pckg}   # NCO para
#export HOMEobsproc=${PACKAGEROOT}/obsproc.${obsproc_ver_pckg}       # NCO prod
#export HOMEobsproc=${userROOT}/install/obsproc-rmprep          # SM local
#export HOMEobsproc=${userROOT}/GIT/obsproc                      # IG local
export HOMEobsproc=${PACKAGEROOT}/obsproc.${obsproc_ver_pckg}/obsproc/      # local


VERSION_FILE=${HOMEobsproc}/versions/run.ver                     # NCO para&prod
#VERSION_FILE=${userROOT}/install/obsproc-rmprep/versions/run.ver # SM local
#VERSION_FILE=${userROOT}/GIT/obsproc/versions/run.ver             # IG local
if [ -f $VERSION_FILE ]; then
   . $VERSION_FILE
else
  echo Need version info...  Exiting...
 exit 7
fi


#Load the modules
module load grib_util/${grib_util_ver}
module load netcdf/${netcdf_ver}
module load intel/${intel_ver}
module load craype/${craype_ver}
module load cray-mpich/${cray_mpich_ver}
module load cray-pals/${cray_pals_ver}
module load cfp/${cfp_ver}

#use para installation
#module use /apps/ops/para/nco/modulefiles/compiler/intel/19.1.3.304
#use local installation
#module use ${userROOT}/install/bufr-dump/modulefiles                                   # SM local
#module use  ${userROOT}/GIT/bufr-dump/install/modulefiles # IG local
#module load bufr_dump/${bufr_dump_ver}

# use local prepobs installation
#module use ${userROOT}/install/prepobs/modulefiles            # SM local
export prepobs_ver=1.1.0
module use ${userROOT}/TAC2/prepobs.v${prepobs_ver}/prepobs/install/modulefiles
module load prepobs/${prepobs_ver} 

#Check if they exist
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)grib_util/") -eq 0 ]]; then echo "grib_util is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)netcdf/") -eq 0 ]]; then echo "netcdf is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)bufr_dump/") -eq 0 ]]; then echo "bufr_dump is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)prepobs/") -eq 0 ]]; then echo "prepobs is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)intel/") -eq 0 ]]; then echo "intel is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)craype/") -eq 0 ]]; then echo "craype is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cray-mpich/") -eq 0 ]]; then echo "cray-mpich is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cray-pals/") -eq 0 ]]; then echo "cray-pals is not loaded!"; fi
if [[ $(echo $LOADEDMODULES | egrep -c "(^|:)cfp/") -eq 0 ]]; then echo "cfp is not loaded!"; fi


export SENDECF=NO   # developer
export SENDSDM=NO   # developer
export SENDDBN=NO   # developer

#export DATAROOT=/lfs/h2/emc/stmp/$USER  #ORIG
export DATAROOT=/lfs/h2/emc/obsproc/noscrub/nicholas.esposito/TACcom
export jlogfile=/lfs/h2/emc/stmp/$USER/${JTYP}.$PDY.jlogfile

export COMIN_ROOT=${DATAROOT}/CRON/${DESC}/com
#export COMROOT=${COMIN_ROOT}
#export HOMEgfs=$PACKAGEROOT/gfs.v16.2.0 #no longer has /fix/prepobs_errtable.global but more /fix dirs
export HOMEgfs=$COMROOT/gfs/v16.3/       #NCO approved shared location for common GFS files

#export COMIN_ROOT=/lfs/h2/emc/stmp/$USER/CRON/${DESC}/com   #ORIG
#export COMIN_ROOT=${DATAROOT}/CRON/${DESC}/com
#export COMROOT=${COMIN_ROOT}
#export COMINgdas=/lfs/h1/ops/canned/com/gfs/v16.2/${JTYP}.${PDY}/${cyc}/${COMPONENT}
#export COMINgfs=/lfs/h1/ops/canned/com/gfs/v16.2/${JTYP}.${PDY}/${cyc}/${COMPONENT}
export COMOUT_ROOT=/lfs/h2/emc/stmp/$USER/CRON/${DESC}/com      #ORIG
export COMOUT_ROOT=${DATAROOT}/CRON/${DESC}/com

export DEBUG_LEVEL=3
export KEEPDATA=YES
export LOUD=ON

$HOMEobsproc/jobs/JOBSPROC_GLOBAL_PREP
err=$?

#exit

# When run from cron, the stdout is written to /u/$USER
# mv to stmp
pbsjobid=$(echo $PBS_JOBID | cut -d'.' -f1)
cronlogfile=/u/$USER/$PBS_JOBNAME.o$pbsjobid
outputdir=/lfs/h2/emc/stmp/${USER}/CRON/${DESC}/output
if [ -f "$cronlogfile" ]; then
  mkdir -p $outputdir
  mv $cronlogfile ${outputdir}/$PBS_JOBNAME.o$pbsjobid
fi

# Kick off prep_post job
if [ $err -eq 0 ]; then
  echo "submit jglobal_prep_post:"
  jtyp=$JTYP cyc=$cyc PDY=$PDY desc=$DESC bash -l /u/$USER/bin/cycqsub \
  /lfs/h2/emc/obsproc/noscrub/nicholas.esposito/TAC2/triggers/jglobal_prep_post.wc2.pbs
fi

exit

